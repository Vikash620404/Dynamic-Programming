public static boolean isSubSetSum(int[]set,int n,int sum){
boolean[][] subset=new boolean[sum+1][n+1];
for(int i=0;i<=n;i++){
subset[i][0]=true;
}
for (int i = 1; i <= n; i++)
        {
            // consider all sum from 1 to sum
            for (int j = 1; j <= sum; j++)
            {
                // don't include the i'th element if `j-A[i-1]` is negative
                if (set[i - 1] > j) {
                    subset[i][j] = subset[i - 1][j];
                }
                else {
                    // find the subset with sum `j` by excluding or including
                    // the i'th item
                    subset[i][j] = subset[i - 1][j] || subset[i - 1][j - set[i - 1]];
                }
            }
        }
 
        // return maximum value
        return subset[n][sum];
    }
}
//o(n^2);
//o(n);
